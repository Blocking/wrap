package ${package}.api.impl;
#set( $service = ${lowerClassName}+"Service")
#set( $Service = ${className}+"Service")
#set( $Dto = ${className}+"DTO")
#set( $addQuery = ${className}+"AddQuery")
#set( $editQuery = ${className}+"EditQuery")
#set( $pageQuery = ${className}+"PageQuery")

import com.github.pagehelper.PageInfo;
import ${package}.dto.${className}DTO;
import ${package}.query.${className}AddQuery;
import ${package}.query.${className}EditQuery;
import ${package}.query.${className}PageQuery;
import ${package}.api.${className}Service;
import com.ikongjian.commons.annotation.Permission;
import com.ikongjian.commons.entity.Result;
import com.ikongjian.commons.enums.PermissionTypeEnum;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiOperation;
import org.springframework.web.bind.annotation.*;

import javax.annotation.Resource;
import javax.validation.Valid;

/**
 * $classComments
 * @author $author
 * @date $date
 */
@Api(tags = "${classComments}模块")
@RestController
@RequestMapping("/${className}")
public class ${className}Controller {

    @Resource
    private $Service $service;


    /**
     * 分页查询
     * @param pageQuery query
     * @return 分页数据
     */
    @GetMapping
    @Permission(permissionType = PermissionTypeEnum.AUTH)
    @ApiOperation(value = "${classComments}分页查询", notes = "${classComments}分页查询")
    public Result<PageInfo<$Dto>> searchPage(@Valid $pageQuery pageQuery) {
        return this.${service}.searchPage(pageQuery);
        }


   /**
    * 新增${classComments}
    * @param addQuery 结构体
    * @return empty result
    */
    @PostMapping
    @Permission(permissionType = PermissionTypeEnum.AUTH)
    @ApiOperation(value = "新增${classComments}", notes = "新增${classComments}")
    @ApiImplicitParam(name = "addQuery", value = "${classComments}结构体", required = true, dataTypeClass = ${addQuery}.class, paramType = "body")
    public Result<Void> add(@RequestBody @Valid $addQuery addQuery){
        return this.${service}.add(addQuery);
    }

    /**
    * ${classComments}查询
    * @param id 主键id
    * @return result ${classComments}
    */
    @GetMapping("/{id}")
    @Permission(permissionType = PermissionTypeEnum.AUTH)
    @ApiOperation(value = "${classComments}查询", notes = "${classComments}查询")
    @ApiImplicitParam(name = "id", value = "${classComments}ID", required = true, dataTypeClass = Integer.class, paramType = "path")
    public Result<$Dto> searchDetail(@PathVariable Long id) {
        return this.${service}.search(id);
    }

    /**
    * 修改${classComments}
    * @param updateQuery ${classComments}结构体
    * @return empty result
    */
    @PutMapping
    @Permission(permissionType = PermissionTypeEnum.AUTH)
    @ApiOperation(value = "修改${classComments}", notes = "修改${classComments}")
    @ApiImplicitParam(name = "updateQuery", value = "${classComments}结构体", required = true, dataTypeClass = ${editQuery}.class, paramType = "body")
    public Result<Void> updateLegend(@RequestBody @Valid $editQuery updateQuery){
        return this.${service}.update(updateQuery);
        }


    }